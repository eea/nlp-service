[metadata]
name = NLPService
version = file: VERSION.txt
url = https://github.com/eea/NLPService
project_urls =
    GitHub: issues = https://github.com/eea/NLPService/issues
    GitHub: repo = https://github.com/eea/NLPService
description = Neural Question Answering & Semantic Search at Scale. Use modern transformer based models like BERT to find answers in large document collections
long_description = file: README.md
long_description_content_type = text/markdown
keywords=
    QA
    Question-Answering
    Reader
    Retriever
    semantic-search
    search
    haystack
author = Tiberiu Ichim
author_email = tiberiu.ichim@gmail.com
license = Apache License 2.0
license_file = LICENSE
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Science/Research
    License :: Freely Distributable
    License :: OSI Approved :: Apache Software License
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10

[options]
use_scm_version = True
python_requires = >=3.7, <4
packages = find:
setup_requires =
    setuptools
    wheel
install_requires =
    importlib-metadata; python_version < '3.8'
    farm-haystack
    venusian
    uvicorn
    fastapi_chameleon
    pygraphviz
    jq
    langdetect


[options.packages.find]
exclude =
    rest_api*
    test*
    tutorials*
    ui*

[tool:pytest]
testpaths =
    tests/
python_files =
    test_*.py
addopts =
    --ignore-glob=app/*
    -vv
norecursedirs = app/*

[mypy]
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
plugins = pydantic.mypy

[tox]
requires = tox-venv
           setuptools >= 30.0.0
envlist = py36,py37

[testenv]
changedir = tests
deps =
    coverage
    pytest
    pandas
setenv =
    COVERAGE_FILE = test-reports/.coverage
    PYTEST_ADDOPTS = --junitxml=test-reports/{envname}/junit.xml -vv
commands =
    coverage run --source app --parallel-mode -m pytest {posargs}
    coverage combine
    coverage report -m
    coverage html -d test-reports/coverage-html
    coverage xml -o test-reports/coverage.xml
