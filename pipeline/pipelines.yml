version: '0.7'

# See
# https://github.com/deepset-ai/haystack/blob/master/docs/_src/api/api/pipelines.md#load_from_yaml
# for how to override from env
#
# ES document store options:
# `index`: the ES index name, by default "document"
#
# `text_field`: Name of field that might contain the answer and will therefore be
# passed to the Reader Model (e.g. "full_text"). If no Reader is used (e.g. in
# FAQ-Style QA) the plain content of this field will just be returned.
#
# `name_field`: Name of field that contains the title of the the doc
#
# `embedding_field`: per text field embeddings, default: "embedding". Name of
# field containing an embedding vector (Only needed when using a dense
# retriever (e.g. DensePassageRetriever, EmbeddingRetriever) on top)
#
# `label_index`: Name of index in elasticsearch to use for storing labels. If
# not existing yet, we will create one.
#
# faq_question_field:
#
# See the rest at:
# https://github.com/deepset-ai/haystack/blob/master/haystack/document_store/elasticsearch.py

components:    # define all the building-blocks for Pipeline
  - name: ElasticsearchDocumentStore
    type: ElasticsearchDocumentStore
    params:
      host: localhost
      index: global-search
      create_index: false
      text_field: description
      search_fields:
        - description
      name_field: title
  - name: ESRetriever
    type: ElasticsearchRetriever
    params:
      document_store: ElasticsearchDocumentStore    # params can reference other components defined in the YAML
      top_k: 5
  - name: SearchlibAdapter
    type: SearchlibAdapter
  - name: Reader       # custom-name for the component; helpful for visualization & debugging
    type: FARMReader    # Haystack Class name for the component
    params:
      model_name_or_path: deepset/roberta-base-squad2
  - name: TextFileConverter
    type: TextConverter
  - name: PDFFileConverter
    type: PDFToTextConverter
  - name: Preprocessor
    type: PreProcessor
    params:
      split_by: word
      split_length: 1000
  - name: FileTypeClassifier
    type: FileTypeClassifier
  - name: QueryClassifier
    type: TransformersQueryClassifier
    params:
      model_name_or_path: shahrukhx01/bert-mini-finetune-question-detection
  - name: CategoryQuestion
    type: Category
    params:
      category: "question"
  - name: CategoryStatement
    type: Category
    params:
      category: "statement"

pipelines:
  - name: query    # a sample extractive-qa Pipeline
    type: Query
    nodes:
      - name: ESRetriever
        inputs: [Query]
      - name: Reader
        inputs: [ESRetriever]
      - name: SearchlibAdapter
        inputs: [Reader]

  - name: question    # a sample extractive-qa Pipeline
    type: Query
    nodes:
      - name: QueryClassifier
        inputs: [Query]
      - name: CategoryQuestion
        inputs: [QueryClassifier.output_1]
      - name: CategoryStatement
        inputs: [QueryClassifier.output_2]

  # - name: indexing
  #   type: Indexing
  #   nodes:
  #     - name: FileTypeClassifier
  #       inputs: [File]
  #     - name: TextFileConverter
  #       inputs: [FileTypeClassifier.output_1]
  #     - name: PDFFileConverter
  #       inputs: [FileTypeClassifier.output_2]
  #     - name: Preprocessor
  #       inputs: [PDFFileConverter, TextFileConverter]
  #     - name: ElasticsearchDocumentStore
  #       inputs: [Preprocessor]
